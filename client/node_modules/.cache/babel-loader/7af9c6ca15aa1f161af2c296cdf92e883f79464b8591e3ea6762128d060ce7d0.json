{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Naide\\\\OneDrive\\\\Desktop\\\\project\\\\client\\\\src\\\\components\\\\singlePost\\\\SinglePost.jsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { Context } from \"../../context/Context\";\nimport \"./singlePost.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SinglePost() {\n  _s();\n  const location = useLocation();\n  const path = location.pathname.split(\"/\")[2];\n  const [post, setPost] = useState({});\n  const PF = \"http://localhost:5000/images/\";\n  const {\n    user\n  } = useContext(Context);\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [updateMode, setUpdateMode] = useState(false);\n  const {\n    setPosts,\n    posts\n  } = useContext(Context);\n  useEffect(() => {\n    const getPost = async () => {\n      const res = await axios.get(\"/posts/\" + path);\n      setPost(res.data);\n      setTitle(res.data.title);\n      setDesc(res.data.desc);\n    };\n    getPost();\n  }, [path]);\n  const handleDelete = async () => {\n    try {\n      await axios.delete(`/posts/${post._id}`, {\n        data: {\n          username: user.username\n        }\n      });\n      console.log(`Deleted post with ID ${post._id}`);\n      setPosts(posts.filter(p => p._id !== post._id));\n    } catch (error) {}\n  };\n  const handleUpdate = async () => {\n    try {\n      await axios.put(`/posts/${post._id}`, {\n        username: user.username,\n        title,\n        desc\n      });\n      setUpdateMode(false);\n    } catch (err) {}\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"singlePost\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"singlePostWrapper\",\n      children: [post.photo && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: PF + post.photo,\n        alt: \"\",\n        className: \"singlePostImg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), updateMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        className: \"singlePostTitleInput\",\n        autoFocus: true,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"singlePostTitle\",\n        children: [title, post.username === (user === null || user === void 0 ? void 0 : user.username) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"singlePostEdit\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"singlePostIcon far fa-edit\",\n            onClick: () => setUpdateMode(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"singlePostIcon far fa-trash-alt\",\n            onClick: handleDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"singlePostInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"singlePostAuthor\",\n          children: [\"Author:\", /*#__PURE__*/_jsxDEV(Link, {\n            to: `/?user=${post.username}`,\n            className: \"link\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: [\" \", post.username]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"singlePostDate\",\n          children: new Date(post.createdAt).toDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), updateMode ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"singlePostDescInput\",\n        value: desc,\n        onChange: e => setDesc(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"singlePostDesc\",\n        children: desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), updateMode && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"singlePostButton\",\n        onClick: handleUpdate,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(SinglePost, \"aKxLzTOfcAWRkPXLsta0gjIsl2g=\", false, function () {\n  return [useLocation];\n});\n_c = SinglePost;\nvar _c;\n$RefreshReg$(_c, \"SinglePost\");","map":{"version":3,"names":["axios","useContext","useEffect","useState","useLocation","Link","Context","jsxDEV","_jsxDEV","SinglePost","_s","location","path","pathname","split","post","setPost","PF","user","title","setTitle","desc","setDesc","updateMode","setUpdateMode","setPosts","posts","getPost","res","get","data","handleDelete","delete","_id","username","console","log","filter","p","error","handleUpdate","put","err","className","children","photo","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","value","autoFocus","onChange","e","target","onClick","to","Date","createdAt","toDateString","_c","$RefreshReg$"],"sources":["C:/Users/Naide/OneDrive/Desktop/project/client/src/components/singlePost/SinglePost.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Context } from \"../../context/Context\";\r\nimport \"./singlePost.css\";\r\n\r\nexport default function SinglePost() {\r\n  const location = useLocation();\r\n  const path = location.pathname.split(\"/\")[2];\r\n  const [post, setPost] = useState({});\r\n  const PF = \"http://localhost:5000/images/\";\r\n  const { user } = useContext(Context);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [desc, setDesc] = useState(\"\");\r\n  const [updateMode, setUpdateMode] = useState(false);\r\n  const { setPosts, posts } = useContext(Context);\r\n\r\n  useEffect(() => {\r\n    const getPost = async () => {\r\n      const res = await axios.get(\"/posts/\" + path);\r\n      setPost(res.data);\r\n      setTitle(res.data.title);\r\n      setDesc(res.data.desc);\r\n    };\r\n    getPost();\r\n  }, [path]);\r\n\r\n  const handleDelete = async () => {\r\n    try {\r\n      await axios.delete(`/posts/${post._id}`, {\r\n        data: { username: user.username },\r\n      });\r\n      console.log(`Deleted post with ID ${post._id}`);\r\n      setPosts(posts.filter(p => p._id !== post._id));\r\n    } catch (error) {\r\n    }\r\n  };\r\n  \r\n  \r\n  const handleUpdate = async () => {\r\n    try {\r\n      await axios.put(`/posts/${post._id}`, {\r\n        username: user.username,\r\n        title,\r\n        desc,\r\n      });\r\n      setUpdateMode(false)\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <div className=\"singlePost\">\r\n      <div className=\"singlePostWrapper\">\r\n        {post.photo && (\r\n          <img src={PF + post.photo} alt=\"\" className=\"singlePostImg\" />\r\n        )}\r\n        {updateMode ? (\r\n          <input\r\n            type=\"text\"\r\n            value={title}\r\n            className=\"singlePostTitleInput\"\r\n            autoFocus\r\n            onChange={(e) => setTitle(e.target.value)}\r\n          />\r\n        ) : (\r\n          <h1 className=\"singlePostTitle\">\r\n            {title}\r\n            {post.username === user?.username && (\r\n              <div className=\"singlePostEdit\">\r\n                <i\r\n                  className=\"singlePostIcon far fa-edit\"\r\n                  onClick={() => setUpdateMode(true)}\r\n                ></i>\r\n                <i\r\n                  className=\"singlePostIcon far fa-trash-alt\"\r\n                  onClick={handleDelete}\r\n                ></i>\r\n              </div>\r\n            )}\r\n          </h1>\r\n        )}\r\n        <div className=\"singlePostInfo\">\r\n          <span className=\"singlePostAuthor\">\r\n            Author:\r\n            <Link to={`/?user=${post.username}`} className=\"link\">\r\n              <b> {post.username}</b>\r\n            </Link>\r\n          </span>\r\n          <span className=\"singlePostDate\">\r\n            {new Date(post.createdAt).toDateString()}\r\n          </span>\r\n        </div>\r\n        {updateMode ? (\r\n          <textarea\r\n            className=\"singlePostDescInput\"\r\n            value={desc}\r\n            onChange={(e) => setDesc(e.target.value)}\r\n          />\r\n        ) : (\r\n          <p className=\"singlePostDesc\">{desc}</p>\r\n        )}\r\n        {updateMode && (\r\n          <button className=\"singlePostButton\" onClick={handleUpdate}>\r\n            Update\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}